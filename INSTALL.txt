Install.txt, golf game demo:

Demo MS3
Welcome to the demo, the following instructions will allow you to load our code 
and demo the final game. 

1. Download and Unzip all files. This should be done preferably in Vscode. 

2. After unzipping the file, run the “make build” command on the command line 
in a terminal window within VScode

3. Run make test to run our testing sweet. It should be noted that there are
a series of commented out tests. This is becasue they actually require playing 
of the game and user input to be tested. If one chooses to uncomment, make
test will then prompt for input. 

4. Make docs can be used to get the documentation for our project. 

5. Make play can be used to play the actual game. If you run make play, 
it will initialize a game, you will choose the course you want to play, allow 
you to input player information, then start playing the game. 










Demo MS1
Welcome to the demo, the following instructions will allow you to load our code 
and demo the player initialization and swing functionalities. 

1. Download and Unzip all files. This should be done preferably in Vscode. 

2. After unzipping the file, run the “make build” command on the command line 
in a terminal window within VScode

3. Open top to run Ocaml inside the terminal window

4. Enter  [ #load "str.cma";; ] into utop (do not include brackets). 

5. The first file we are going to demo is player.ml. It allows users to input 
their player information to be stored in the game. Enter the command 
[ #use “player.ml”;; ] into utop

6. Next type [ init_players();;]  into utop. This will begin the prompting for 
information from the user, please follow along. It will ask for the number of 
players in the game along with their information. Note that exceptions will be 
thrown for invalid input and the program will stop. 

7. The next file to demo is command.ml. It allows users to input information 
regarding their swing on their turn. Enter the command [ #use “command.ml”;; ] 
into utop

8. Enter [ parse_swing();;] into the command line in utop. The program will 
begin prompting the user for input, please follow along. Note that upon 
incorrect input, different messages will be displayed depending on the error 
of the input. 